import axios from "axios";

const API_KEY = "8be8f9112d4f49e8bc35100bb649ce2b";
const BASE_URL = "https://api.spoonacular.com";

const api = axios.create({
    baseURL: BASE_URL,
    params: {
        apiKey: API_KEY,
    },
});

export const searchRecipes = async (query, offset = 0, number = 20) => {
    try {
        const response = await api.get("/recipes/complexSearch", {
            params: {
                query,
                offset,
                number,
            },
        });
        return response.data;
    } catch (error) {
        console.error("Error searching recipes:", error);
        throw error;
    }
};

export const getRecipeDetails = async (id) => {
    try {
        const response = await api.get(`/recipes/${id}/information`);
        return response.data;
    } catch (error) {
        console.error("Error fetching recipe details:", error);
        throw error;
    }
};

export const getRandomRecipes = async (number = 10) => {
    try {
        const response = await api.get("/recipes/random", {
            params: {
                number,
            },
        });
        return response.data;
    } catch (error) {
        console.error("Error fetching random recipes:", error);
        throw error;
    }
};

export const getRecipesByDiet = async (diet, offset = 0, number = 20) => {
    try {
        const response = await api.get("/recipes/complexSearch", {
            params: {
                diet,
                offset,
                number,
            },
        });
        return response.data;
    } catch (error) {
        console.error("Error fetching recipes by diet:", error);
        throw error;
    }
};

export const getRecipesByCuisine = async (cuisine, offset = 0, number = 20) => {
    try {
        const response = await api.get("/recipes/complexSearch", {
            params: {
                cuisine,
                offset,
                number,
            },
        });
        return response.data;
    } catch (error) {
        console.error("Error fetching recipes by cuisine:", error);
        throw error;
    }
};

export const autocompleteRecipeSearch = async (query, number = 10) => {
    try {
        const response = await api.get("/recipes/autocomplete", {
            params: {
                query,
                number,
            },
        });
        return response.data;
    } catch (error) {
        console.error("Error autocompleting recipe search:", error);
        throw error;
    }
};
